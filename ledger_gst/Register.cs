using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ledger_gst
{
    public partial class Register : Form
    {
        SqlConnection con = new SqlConnection("Data Source=.\\SQLEXPRESS;Initial Catalog=ledgerDB;User ID=sa;Password=12345;Connect Timeout=30;Encrypt=False;TrustServerCertificate=False;ApplicationIntent=ReadWrite;MultiSubnetFailover=False");
        SqlCommand cmd = new SqlCommand();

        string inoutdiv;
        public Register()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSource1.FillAsync();
        }

        private void btn_Close_Click(object sender, EventArgs e)
        {
            this.Close();
        }

        public void droplist()
        {
            if (con.State == ConnectionState.Closed)
                con.Open();
            SqlCommand cmd = new SqlCommand("Select Sub_name From ComCodemaster", con);
            SqlDataAdapter da = new SqlDataAdapter(cmd);
            DataTable dt = new DataTable();
            da.Fill(dt);
        }

        //저장
        private void btnSave_Click(object sender, EventArgs e)
        {
            try
            {
                if (con.State == ConnectionState.Closed)
                    con.Open();
                
                if(radIncome.Checked == true)
                {
                    inoutdiv = "수입";
                }
                else
                {
                    inoutdiv = "지출";
                }

                SqlCommand cmd = new SqlCommand("SP_LEDGER_REGISTER", con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.Clear();

                cmd.Parameters.AddWithValue("@p_num", 0);
                cmd.Parameters.AddWithValue("@p_Inoutdiv", inoutdiv);
                cmd.Parameters.AddWithValue("@p_Inoutdt", dateEdit1.DateTime);
                cmd.Parameters.AddWithValue("@p_Category", lookUpEdit1.EditValue?.ToString() ?? string.Empty) ;
                cmd.Parameters.AddWithValue("@p_Contents", txtContent.EditValue?.ToString() ?? string.Empty);
                cmd.Parameters.AddWithValue("@p_Amt", spinAnt.EditValue.ToString() ?? string.Empty);
                cmd.ExecuteNonQuery();
                MessageBox.Show("INSERT Successfully");
            }
            catch(Exception ex)
            {
                MessageBox.Show(ex.Message, "Error Message");
            }
            finally
            {
                if (con.State == ConnectionState.Open)
                    con.Close();
            }
        }

        private void btnNew_Click(object sender, EventArgs e)
        {
            txtContent.Text = spinAnt.Text = dateEdit1.Text = lookUpEdit1.Text =  string.Empty;
            
        }

        private void Register_Load(object sender, EventArgs e)
        {
           
        }
    }
}
